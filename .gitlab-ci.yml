stages:
  - test
  - publish
  - trigger_prep
  - trigger

variables:
  GOLANG_VERSION: "1.17.13"
  LICENSE_HEADERS_IGNORE_FILES_REGEXP: "./ltmain.sh"
  DEBIAN_FRONTEND: noninteractive

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-lint.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'

test:unit:
  stage: test
  image: golang:1.17
  before_script:
    - apt-get update && apt-get install -yyq liblzma-dev libssl-dev libglib2.0-dev dbus clang-format-9
    - GO111MODULE=off go get -u github.com/jstemmer/go-junit-report
  script:
    - git ls-tree -r --name-only HEAD | grep -v vendor/ | grep '\.[ch]$' | xargs clang-format-9 -i
    - make coverage
    - make
    - mkdir -p tests/unit-coverage && find . -name 'coverage.txt' -exec cp --parents {} ./tests/unit-coverage \;
    - tar -cvf $CI_PROJECT_DIR/unit-coverage.tar tests/unit-coverage
  tags:
    - mender-qa-worker-generic
  artifacts:
    expire_in: 2w
    reports:
      junit: report.xml
    paths:
      - unit-coverage.tar

test:modules-artifact-gen:
  stage: test
  image: ubuntu:18.04
  before_script:
    - apt-get update
    - apt-get install -y wget python3-pip
    - apt install -yy $(cat support/modules-artifact-gen/tests/deb-requirements.txt)
    # mender-artifact
    - wget https://downloads.mender.io/mender-artifact/3.9.0/linux/mender-artifact
    - chmod 755 mender-artifact
    - mv mender-artifact /usr/bin/
    # Test dependencies
    - pip3 install -r support/modules-artifact-gen/tests/requirements.txt
  script:
    - python3 --version
    - python3 -m pytest support/modules-artifact-gen/tests

test:docker:
  image: docker
  needs: []
  services:
    - docker:20.10.21-dind
  stage: test
  script:
    - ./tests/build-docker

publish:tests:
  stage: publish
  image: golang:1.17-alpine3.14
  dependencies:
    - test:unit
  before_script:
    # Install dependencies
    - apk add --no-cache git
    - GO111MODULE=off go get -u github.com/mattn/goveralls
    # Coveralls env variables:
    #  According to https://docs.coveralls.io/supported-ci-services
    #  we should set CI_NAME, CI_BUILD_NUMBER, etc. But according
    #  to goveralls source code (https://github.com/mattn/goveralls)
    #  many of these are not supported. Set CI_BRANCH,
    #  and pass few others as command line arguments.
    #  See also https://docs.coveralls.io/api-reference
    - export CI_BRANCH=${CI_COMMIT_BRANCH}
  script:
    - tar -xvf unit-coverage.tar
    - goveralls
      -repotoken ${COVERALLS_TOKEN}
      -service gitlab-ci
      -jobid $CI_PIPELINE_ID
      -covermode set
      -flagname unittests
      -parallel
      -coverprofile $(find tests/unit-coverage -name 'coverage.txt' | tr '\n' ',' | sed 's/,$//')

generate-qa-trigger:
  image: python:alpine
  stage: trigger_prep
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|[0-9]+\.[0-9]+\.x)$/'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  before_script:
    - apk add --no-cache git
    - pip3 install pyyaml
    - wget -q https://raw.githubusercontent.com/mendersoftware/mender-qa/master/scripts/generate_client_publish_job.py
  script:
    - python generate_client_publish_job.py --trigger ${CI_PROJECT_NAME} --version ${CI_COMMIT_REF_NAME} --filename gitlab-ci-client-qemu-publish-job.yml
  artifacts:
    paths:
      - gitlab-ci-client-qemu-publish-job.yml

trigger:mender-qa:
  stage: trigger
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|[0-9]+\.[0-9]+\.x)$/'
    # the following is to prevent an endless loop of qa pipelines caused by downstream pipelines
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  trigger:
    include:
      - artifact: gitlab-ci-client-qemu-publish-job.yml
        job: generate-qa-trigger

trigger:mender-dist-packages:
  stage: trigger
  inherit:
    variables: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  variables:
    MENDER_VERSION: $CI_COMMIT_REF_NAME
    PUBLISH_MENDER_DIST_PACKAGES_AUTOMATIC: "true"
  trigger:
    project: Northern.tech/Mender/mender-dist-packages
    branch: master

.trigger:mender-docs-site:
  stage: trigger
  inherit:
    variables: false
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|[0-9]+\.[0-9]+\.x)$/'
      changes:
      - Documentation/*
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never

trigger:mender-docs-site:master:
  extends: .trigger:mender-docs-site
  trigger:
    project: Northern.tech/Mender/mender-docs-site
    branch: master

trigger:mender-docs-site:production:
  extends: .trigger:mender-docs-site
  trigger:
    project: Northern.tech/Mender/mender-docs-site
    branch: production

trigger:integration:
  stage: trigger
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  trigger:
    project: Northern.tech/Mender/integration
    branch: master
    strategy: depend
