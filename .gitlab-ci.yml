image: golang:1.11.4

variables:
  REPO_NAME: github.com/mendersoftware/mender

before_script:
  - mkdir -p /go/src/$(dirname $REPO_NAME)/mender /go/src/_/builds
  - cp -r $CI_PROJECT_DIR /go/src/$(dirname $REPO_NAME)
  - cd $GOPATH/src/$REPO_NAME
  - apt-get update && apt-get install -yyq liblzma-dev
  - make get-tools

stages:
  - test
  - publish
  - trigger

test:
  stage: test
  script:
    - make extracheck
    - make coverage
    - make
    - mkdir -p tests/unit-coverage && find . -name 'coverage.txt' -exec cp --parents {} ./tests/unit-coverage \;
    - tar -cvf $CI_PROJECT_DIR/unit-coverage.tar tests/unit-coverage
  tags:
    - mender-qa-slave
  artifacts:
    expire_in: 2w
    paths:
      - unit-coverage.tar

publish:tests:
  image: alpine
  stage: publish
  before_script:
    - apk add --no-cache bash curl findutils git
  dependencies:
    - test
  script:
    - tar -xvf unit-coverage.tar
    - bash -c "bash <(curl -s https://codecov.io/bash) -Z -s ./tests/unit-coverage"

trigger:mender-qa:
  image: alpine
  stage: trigger
  before_script:
    - apk add --no-cache git curl python3 bash
    - pip3 install pyyaml
    - git clone https://github.com/mendersoftware/integration.git integration
    - git clone https://github.com/mendersoftware/mender-qa.git mender-qa
  script:
    - export WORKSPACE=$(pwd)
    - mender-qa/scripts/gitlab_trigger_client_publish $CI_COMMIT_REF_NAME
  only:
    - /^(master|[0-9]+\.[0-9]+\.x)$/

trigger:mender-dist-packages:
  image: alpine
  stage: trigger
  before_script:
    - apk add --no-cache curl
  script:
    - curl -f -X POST
      -F token=$MENDER_DIST_PACKAGES_TRIGGER_TOKEN
      -F ref=master
      -F variables[MENDER_VERSION]=$CI_COMMIT_REF_NAME
      https://gitlab.com/api/v4/projects/14968223/trigger/pipeline
  only:
    - tags
