stages:
  - test
  - publish
  - trigger_prep
  - trigger

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-c++.yml'

variables:
  GIT_SUBMODULE_STRATEGY: recursive

test:
  stage: test
  image: debian:11
  before_script:
    - apt update && apt install -yyq g++ cmake git make lcov pkg-config liblmdb++-dev libboost-dev libboost-log-dev libarchive-dev
  script:
    - cmake -D COVERAGE=ON .
    - make coverage
  artifacts:
    expire_in: 2w
    reports:
      junit: reports/*.xml
    paths:
      - coverage.lcov

test:modules-artifact-gen:
  stage: test
  image: python:3.10
  before_script:
    # mender-artifact
    - curl https://downloads.mender.io/mender-artifact/master/linux/mender-artifact
      -o /usr/local/bin/mender-artifact
    - chmod +x /usr/local/bin/mender-artifact
    # Test dependencies
    - pip install -r support/modules-artifact-gen/tests/requirements.txt
  script:
    - python -m pytest support/modules-artifact-gen/tests

test:docker:
  image: docker
  needs: []
  services:
    - docker:dind
  stage: test
  script:
    - ./tests/build-docker

publish:tests:
  stage: publish
  image: python:3.11
  dependencies:
    - test
  before_script:
    # Install dependencies
    - apt update && apt install -yyq lcov
    - pip install cpp-coveralls pyyaml

    # eddyxu/cpp-coveralls appears dead, but there doesn't seem to be an
    # alternative. Use this patch from someone who attempted to fix it. An
    # alternative to this is to use pyyaml<6, but it's better to use just one
    # old component than two.
    - curl -f https://github.com/eddyxu/cpp-coveralls/commit/067c837c04e039e8c70aa53bceda1cded6751408.patch | patch -f /usr/local/lib/python3.11/site-packages/cpp_coveralls/__init__.py

    - export CI_BRANCH=$CI_COMMIT_BRANCH
    # "TRAVIS_JOB_ID" is hardcoded in cpp-coveralls, but it is semantically the
    # same as "CI_JOB_ID" would be.
    - export TRAVIS_JOB_ID=$CI_PIPELINE_ID

  script:
    - 'echo "service_name: gitlab-ci" > .coveralls.yml'
    - cpp-coveralls
      --repo-token ${COVERALLS_TOKEN}
      --no-gcov
      --lcov-file coverage.lcov

generate-qa-trigger:
  image: python:alpine
  stage: trigger_prep
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|[0-9]+\.[0-9]+\.x)$/'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  before_script:
    - apk add --no-cache git
    - pip3 install pyyaml
    - wget -q https://raw.githubusercontent.com/mendersoftware/mender-qa/master/scripts/generate_client_publish_job.py
  script:
    - python generate_client_publish_job.py --trigger ${CI_PROJECT_NAME} --version ${CI_COMMIT_REF_NAME} --filename gitlab-ci-client-qemu-publish-job.yml
  artifacts:
    paths:
      - gitlab-ci-client-qemu-publish-job.yml

trigger:mender-qa:
  stage: trigger
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|[0-9]+\.[0-9]+\.x)$/'
    # the following is to prevent an endless loop of qa pipelines caused by downstream pipelines
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  trigger:
    include:
      - artifact: gitlab-ci-client-qemu-publish-job.yml
        job: generate-qa-trigger

trigger:mender-dist-packages:
  image: alpine
  stage: trigger
  variables:
    GIT_DEPTH: 0
  before_script:
    - apk add --no-cache curl git
    - MENDER_CLIENT_VERSION=$(git tag | egrep -e '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V -r | head -n1)
  script:
    - curl -v -f -X POST
      -F token=$MENDER_DIST_PACKAGES_TRIGGER_TOKEN
      -F ref=master
      -F variables[MENDER_VERSION]=$CI_COMMIT_REF_NAME
      -F variables[PUBLISH_MENDER_DIST_PACKAGES_AUTOMATIC]=true
      https://gitlab.com/api/v4/projects/14968223/trigger/pipeline
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never

trigger:mender-docs-site:
  image: alpine
  stage: trigger
  before_script:
    - apk add --no-cache curl
  script:
    - curl -v -f -X POST
      -F token=$MENDER_DOCS_SITE_TRIGGER_TOKEN
      -F ref=master
      https://gitlab.com/api/v4/projects/16842368/trigger/pipeline
    - curl -v -f -X POST
      -F token=$MENDER_DOCS_SITE_TRIGGER_TOKEN
      -F ref=production
      https://gitlab.com/api/v4/projects/16842368/trigger/pipeline
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|[0-9]+\.[0-9]+\.x)$/'
      changes:
      - Documentation/*
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never

trigger:integration:
  stage: trigger
  inherit:
    variables: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  trigger:
    project: Northern.tech/Mender/integration
    branch: master
    strategy: depend
