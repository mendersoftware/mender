From d7b1e2e5cb0fd9f70fc3e5f83a3bc376fecb7bc8 Mon Sep 17 00:00:00 2001
From: Ole Petter <ole.orhagen@northern.tech>
Date: Tue, 27 Apr 2021 16:46:19 +0200
Subject: [PATCH 1/1] Instrument mender binary

Changelog: None
Signed-off-by: Ole Petter <ole.orhagen@northern.tech>
---
 main.go          | 39 ++++++++++++++++++++++++++++++++++++++-
 system/system.go | 13 +------------
 2 files changed, 39 insertions(+), 13 deletions(-)

diff --git a/main.go b/main.go
index 98e138a..ecb5730 100644
--- a/main.go
+++ b/main.go
@@ -18,6 +18,8 @@ import (
 	"os"
 	"os/signal"
 	"syscall"
+	"os/exec"
+	"time"
 
 	"github.com/mendersoftware/mender/app"
 	"github.com/mendersoftware/mender/cli"
@@ -32,6 +34,21 @@ func init() {
 	signal.Notify(cli.SignalHandlerChan, syscall.SIGUSR1, syscall.SIGUSR2, syscall.SIGTERM)
 }
 
+// All this code is simply stolen from the
+// client reboot routine.
+func rebootClient() {
+	err := exec.Command("reboot").Run()
+	if err != nil {
+		os.Exit(1)
+	}
+
+	// Wait up to ten minutes for reboot to kill the client, otherwise the
+	// client may mistake a successful return code as "reboot is complete,
+	// continue". *Any* return from this function is an error.
+	time.Sleep(10 * time.Minute)
+	fmt.Println("System did not reboot, even though 'reboot' call succeeded.")
+}
+
 func doMain() int {
 	if err := cli.SetupCLI(os.Args); err != nil {
 		switch err {
@@ -52,5 +69,25 @@ func doMain() int {
 }
 
 func main() {
-	os.Exit(doMain())
+	// The client panics instead of rebooting, so that we can capture the
+	// coverage logs, before rebooting.
+	defer func() {
+		if r := recover(); r != nil {
+			if s, ok := r.(string); ok && s == "Client needs reboot!" {
+				coverReport()
+				rebootClient()
+			} else {
+				panic(r)
+			}
+		}
+	}()
+	// Set the path in which to store the coverage analysis files
+	os.Setenv("COVERAGE_FILEPATH", "/data/mender/")
+
+	ret := doMain()
+
+	coverReport() // Manually create the coverage report before exiting
+
+	os.Exit(ret)
+
 }
diff --git a/system/system.go b/system/system.go
index d5a5cbe..4e50567 100644
--- a/system/system.go
+++ b/system/system.go
@@ -18,9 +18,7 @@ import (
 	"io"
 	"os"
 	"os/exec"
-	"time"
 
-	"github.com/pkg/errors"
 )
 
 type SystemRebootCmd struct {
@@ -34,16 +32,7 @@ func NewSystemRebootCmd(command Commander) *SystemRebootCmd {
 }
 
 func (s *SystemRebootCmd) Reboot() error {
-	err := s.command.Command("reboot").Run()
-	if err != nil {
-		return err
-	}
-
-	// Wait up to ten minutes for reboot to kill the client, otherwise the
-	// client may mistake a successful return code as "reboot is complete,
-	// continue". *Any* return from this function is an error.
-	time.Sleep(10 * time.Minute)
-	return errors.New("System did not reboot, even though 'reboot' call succeeded.")
+	panic("Client needs reboot!")
 }
 
 type Commander interface {
-- 
2.17.1

