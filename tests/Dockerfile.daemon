# Creates a container which acts as a bare bones non-VM based Mender
# installation, for use in tests.
FROM ubuntu:24.04 AS build

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y cmake make git build-essential jq curl pkg-config liblmdb++-dev libboost-dev libboost-log-dev libssl-dev libarchive-dev libdbus-1-dev

WORKDIR /cpp/src/github.com/mendersoftware/mender
COPY ./ .

RUN mkdir /tmp/build
RUN cmake -S /cpp/src/github.com/mendersoftware/mender -B /tmp/build
RUN cmake --build /tmp/build --parallel $(nproc --all)
RUN DESTDIR=/mender-install cmake --install /tmp/build --prefix /usr

RUN mkdir -p /mender-install/etc/mender/
RUN jq ".ServerCertificate=\"/usr/share/doc/mender-auth/examples/demo.crt\" | .ServerURL=\"https://docker.mender.io/\"" \
    < examples/mender.conf.demo > /mender-install/etc/mender/mender.conf

# Install mender-flash taking the version from the CI manifest file
RUN MENDER_FLASH_VERSION=$(sed -n 's/.*MENDER_FLASH_VERSION: \(.*\)/\1/p' .gitlab-ci.yml); \
    if [ -z "$MENDER_FLASH_VERSION" ]; then \
        echo "Could not parse  MENDER_FLASH_VERSION from .gitlab-ci.yml" 1>&2; \
        exit 1; \
    fi;
RUN mkdir /tmp/mender-flash_build
# TODO: Download/clone if not present
RUN cmake -S /go/src/github.com/mendersoftware/mender-flash -B /tmp/mender-flash_build
RUN cmake --build /tmp/mender-flash_build --parallel $(nproc --all)
RUN DESTDIR=/mender-install cmake --install /tmp/mender-flash_build --prefix /usr


# Install mender-artifact taking the version from the CI manifest file
RUN MENDER_ARTIFACT_VERSION=$(sed -n 's/.*MENDER_ARTIFACT_VERSION: \(.*\)/\1/p' .gitlab-ci.yml); \
    if [ -z "$MENDER_ARTIFACT_VERSION" ]; then \
        echo "Could not parse  MENDER_ARTIFACT_VERSION from .gitlab-ci.yml" 1>&2; \
        exit 1; \
    fi; \
    curl "https://downloads.mender.io/repos/debian/pool/main/m/mender-artifact/mender-artifact_${MENDER_ARTIFACT_VERSION}-1+ubuntu+noble_amd64.deb" \
        --output /mender-artifact.deb && \
    dpkg --install /mender-artifact.deb && \
    rm /mender-artifact.deb
RUN mender-artifact write bootstrap-artifact \
        --artifact-name original \
        --device-type docker-client \
        --provides "rootfs-image.version:original" \
        --output-path /bootstrap.mender

FROM ubuntu:24.04

RUN mkdir -p /run/dbus
RUN apt update && apt install -y libboost-log1.74.0 liblmdb0 libarchive13 dbus iproute2

COPY --from=build /mender-install/usr/bin/mender-update /usr/bin/mender-update
COPY --from=build /mender-install/usr/bin/mender-auth /usr/bin/mender-auth
COPY --from=build /mender-install/usr/bin/mender-flash /usr/bin/mender-flash
COPY --from=build /mender-install/etc/mender /etc/mender
COPY --from=build /mender-install/usr/share/mender /usr/share/mender
COPY --from=build /mender-install/usr/share/doc/mender-auth /usr/share/doc/mender-auth
COPY --from=build /mender-install/lib/systemd/system/mender-updated.service /lib/systemd/system/mender-updated.service
COPY --from=build /mender-install/lib/systemd/system/mender-authd.service /lib/systemd/system/mender-authd.service
COPY --from=build /mender-install/usr/share/dbus-1/system.d/io.mender.AuthenticationManager.conf /usr/share/dbus-1/system.d/io.mender.AuthenticationManager.conf
COPY --from=build /bootstrap.mender /var/lib/mender/bootstrap.mender
RUN mkdir -p /var/lib/mender && echo device_type=docker-client > /var/lib/mender/device_type

COPY tests/entrypoint.sh /

CMD ["/entrypoint.sh"]
